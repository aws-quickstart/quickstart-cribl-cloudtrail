Parameters:
  Bucket2Empty:
    Type: String
  BucketArn2Empty:
    Type: String
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: The Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a
      hyphen (-).
    Default: aws-quickstart
    Description: Name of the S3 bucket for your copy of the Quick Start assets.
      Keep the default name unless you are customizing the template.
      Changing the name updates code references to point to a new Quick
      Start location. This name can include numbers, lowercase letters,
      uppercase letters, and hyphens, but do not start or end with a hyphen (-).
      See https://aws-quickstart.github.io/option1.html.
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^([0-9a-zA-Z-.]+/)*$
    ConstraintDescription: The Quick Start S3 key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slashes (/).
    Default: quickstart-cribl-cloudtrail/
    Description: S3 key prefix that is used to simulate a directory for your copy of the
      Quick Start assets. Keep the default prefix unless you are customizing
      the template. Changing this prefix updates code references to point to
      a new Quick Start location. This prefix can include numbers, lowercase
      letters, uppercase letters, hyphens (-), and forward slashes (/). End with a forward slash.
      See https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html
      and https://aws-quickstart.github.io/option1.html.
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'AWS Region where the Quick Start S3 bucket (QSS3BucketName) is
    hosted. Keep the default Region unless you are customizing the template.
    Changing this Region updates code references to point to a new Quick Start location.
    When using your own bucket, specify the Region.
    See https://aws-quickstart.github.io/option1.html.'
    Type: String

Conditions:
  UsingDefaultBucket: !Equals
    - !Ref QSS3BucketName
    - 'aws-quickstart'

Resources:
  LambdaSourceBucket:
    Type: AWS::S3::Bucket

  CopyZipsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: lambda-copier
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: s3:GetObject
                Resource: !Sub 'arn:${AWS::Partition}:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*'
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:DeleteObject
                Resource: !Sub 'arn:${AWS::Partition}:s3:::${LambdaSourceBucket}/${QSS3KeyPrefix}*'

  CopyZipsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/lambda-copyzips/templates/copy-zips.template.yaml
        - S3Region:
            !If [UsingDefaultBucket, !Ref "AWS::Region", !Ref QSS3BucketRegion]
          S3Bucket:
            !If [
              UsingDefaultBucket,
              !Sub "${QSS3BucketName}-${AWS::Region}",
              !Ref QSS3BucketName,
            ]
      Parameters:
        DestinationBucket: !Ref LambdaSourceBucket
        QSS3BucketName: !Ref "QSS3BucketName"
        QSS3KeyPrefix: !Ref "QSS3KeyPrefix"
        SourceObjects: "functions/DeleteBucketContents.zip"

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: DeleteS3Contents
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                Resource: !Join
                  - ''
                  - - !Ref BucketArn2Empty
                    - /*
              - Effect: Allow
                Action:
                  - 's3:ListBucket'
                Resource:
                  - !Ref BucketArn2Empty
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  RandomStringFunction:
      Type: AWS::Lambda::Function
      Properties:
        Description: Generates a random string for resource names
        Handler: index.handler
        Runtime: python3.7
        Role: !GetAtt CopyZipsRole.Arn
        Timeout: 900
        Code:
          ZipFile: |
            import cfnresponse
            import logging
            import random
            import string
            logger = logging.getLogger(__name__)
            def randomStringDigits(stringLength=16):
                lettersAndDigits = string.ascii_letters + string.digits
                return ''.join(random.choice(lettersAndDigits) for i in range(stringLength))
            def handler(event, context):
                logger.debug(event)
                status = cfnresponse.SUCCESS
                try:
                    cfnData = event['ResourceProperties']['RandomLength']
                    randomkey = randomStringDigits(int(cfnData))
                    responseData = {}
                    responseData['key'] = randomkey
                except Exception:
                    logging.error('Unhandled exception', exc_info=True)
                    status = cfnresponse.FAILED
                finally:
                    cfnresponse.send(event, context, status, responseData, None)

  RandomString:
    Type: Custom::RandomString
    Properties:
      ServiceToken: !GetAtt 'RandomStringFunction.Arn'
      RandomLength: 8

  LambdaEmptyBucket:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaSourceBucket
        S3Key: DeleteBucketContents.zip
      Environment:
        Variables:
          BucketName: !Ref Bucket2Empty
      FunctionName: !Join
                  - ''
                  - - !GetAtt 'RandomString.key'
                    - -DeleteBucketContents
      Handler: index.lambda_handler
      MemorySize: 128
      PackageType: Zip
      Runtime: python3.7
      Role: !GetAtt LambdaRole.Arn
